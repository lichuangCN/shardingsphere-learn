spring:
  shardingsphere:
    datasource:
      names: ds0,ds1
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/sdb-0?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false
        username: root
        password: root
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/sdb-1?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT%2B8&useSSL=false
        username: root
        password: root
    sharding:
      # 分表
      tables:
        user:
          # 主键生成算法
          key-generator:
            column: id
            type: SNOWFLAKE
            props:
              worker:
                id: 1
          # 分表配置 [数据源.数据表]
          actual-data-nodes: ds${0..1}.user_${0..1}
          # 自定义分片算法
          table-strategy:
            standard:
              # 分片依据
              sharding-column: id
              # 分片算法
              precise-algorithm-class-name: site.muzhi.learn.algorithm.UserTablePreciseShardingAlgorithmImpl
          # 分库策略
          database-strategy:
            inline:
              sharding-column: id
              algorithm-expression: ds$->{id % 2}
    # 显示sql
    props:
      sql:
        show: true